generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Appointments {
  id: String      @id @default(auto()) @map("_id") @db.ObjectId 
  patient: Patient @relation(fields: [patientId], references: [id], onDelete: Cascade)
  vet: User       @relation(fields: [vetId], references: [id], onDelete: Cascade)
  reason: String
  date: DateTime
  notes: String?
  status: String  @enum(["Booked", "Completed", "Canceled"]) @default("Booked") @test.IntegrationTest.Field("status")

  createdAt: DateTime @default(now()) @test.IntegrationTest.Field("createdAt")
  updatedAt: DateTime @updatedAt @test.IntegrationTest.Field("updatedAt")

  // Foreign keys
  patientId: String
  vetId: String
}

model Boarding {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  v          Int      @map("__v")
  createdAt  DateTime @db.Date
  end_date   DateTime @db.Date
  notes      String
  patient_id String   @db.ObjectId
  start_date DateTime @db.Date
  status     String
  updatedAt  DateTime @db.Date
}

model Credentials {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  /// Field referred in an index, but found no data to define the type.
  username Json?  @unique(map: "username_1")
}

model Doses {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  v            Int      @map("__v")
  administered Boolean
  date         DateTime @db.Date
  vaccine      String   @db.ObjectId
  vet          String   @db.ObjectId
}

model Medications {
  id                String   @id @default(auto()) @map("_id") @db.ObjectId
  v                 Int      @map("__v")
  cost_per_unit     Int
  createdAt         DateTime @db.Date
  description       String
  expiry_date       DateTime @db.Date
  name              String
  quantity_in_stock Int
  unit              String
  updatedAt         DateTime @db.Date
}

model Patients {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  v         Int      @map("__v")
  age       Int
  breed     String
  createdAt DateTime @db.Date
  name      String   @unique(map: "name_1")
  owner     String   @db.ObjectId
  species   String
  updatedAt DateTime @db.Date
  /// Multiple data types found: Float: 50%, Int: 50% out of 2 sampled entries
  weight    Json
}

model Payments {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  v           Int      @map("__v")
  amount      Int
  createdAt   DateTime @db.Date
  description String
  module_id   String   @db.ObjectId
  module_name String
  payment_bal Int
  status      String
  updatedAt   DateTime @db.Date
}

model Transactions {
  id                         String   @id @default(auto()) @map("_id") @db.ObjectId
  v                          Int      @map("__v")
  amount_paid                Int
  bank_name                  String
  bank_transaction_reference String
  createdAt                  DateTime @db.Date
  mpesa_transaction_id       String
  payment_date               DateTime @db.Date
  payment_id                 String   @db.ObjectId
  payment_type               String
  updatedAt                  DateTime @db.Date
}

model Treatments {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  v         Int      @map("__v")
  createdAt DateTime @db.Date
  date      DateTime @db.Date
  name      String
  notes     String
  patient   String   @db.ObjectId
  updatedAt DateTime @db.Date
  vet       String   @db.ObjectId
}

model Users {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  v            Int      @map("__v")
  county       String?
  createdAt    DateTime @db.Date
  email        String   @unique(map: "email_1")
  isAdmin      Boolean
  isSuperAdmin Boolean?
  name         String?
  password     String?
  phone        String?  @unique(map: "phone_1")
  role         String
  sub_county   String?
  updatedAt    DateTime @db.Date
  ward         String?
}

model Vaccines {
  id                 String   @id @default(auto()) @map("_id") @db.ObjectId
  v                  Int      @map("__v")
  createdAt          DateTime @db.Date
  doses_administered Int
  name               String
  notes              String
  patient            String   @db.ObjectId
  status             String
  total_doses        Int
  updatedAt          DateTime @db.Date
}
